name: Jakarta EE 11 Core Profile with WildFly - Manual

on:
  workflow_dispatch:
    inputs:
      wildfly-version:
        description: WildFly Version
        required: true
        type: string
      java-version:
        description: Java Version
        required: true
        default: 17
        type: string

jobs:
  coreprofile-tck-manual:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Runner steps
    steps:
      - uses: actions/checkout@v4
      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: 'temurin'
          cache: 'maven'
      - name: Build with Maven Java ${{ inputs.java-version }} on WildFly ${{ inputs.wildfly-version }}
        run:  |
          cd core-profile
          mvn -B -V clean verify -Dversion.org.wildfly=${{ inputs.wildfly-version }} -fae -Pstaging
      - name: TCK Report
        run: |
          cd core-profile
          curl -Ls https://sh.jbang.dev | bash -s - app setup
          export PATH="${PATH}:${HOME}/.jbang/bin"
          jbang trust add https://github.com/jamezp/jbang-catalog/
          jbang app install parse-surefire-report@jamezp
          
          printf "=%0.s" {1..50}
          printf "\nOS Information\n"
          printf "=%0.s" {1..50}
          printf "\n"
          cat /etc/os-release
          printf "\n"

          printf "=%0.s" {1..50}
          printf "\nJava Version\n"
          printf "=%0.s" {1..50}
          printf "\n"
          java -version
          
          cd cdi-langmodel-tck
          printf "\n\nCDI langmodel TCK\n"
          parse-surefire-report --batch
          
          cd ../cdi-tck
          printf "\n\nCDI TCK\n"
          parse-surefire-report --batch
          
          cd ../core-tck
          printf "\n\nCore TCK\n"
          parse-surefire-report --batch
          
          cd ../inject-tck
          printf "\n\nInject TCK\n"
          parse-surefire-report --batch
          
          cd ../jsonb-standalone-tck
          printf "\n\nJSON Binding Standalone TCK\n"
          parse-surefire-report --batch
          
          cd ../jsonp-plugability-tck
          printf "\n\nJSON Processing Plugability TCK\n"
          parse-surefire-report --batch
          
          cd ../jsonp-standalone-tck
          printf "\n\nJSON Processing Standalone TCK\n"
          parse-surefire-report --batch
          
          cd ../rest-tck
          printf "\n\nREST TCK\n"
          parse-surefire-report --batch
          
          cd ..
          printf "\n\nAll Totals\n"
          parse-surefire-report --batch
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: test-reports-${{ inputs.java-version }}
          path: |
            '**/surefire-reports/'
            '**/failsafe-reports/'
        
