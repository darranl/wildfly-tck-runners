# This is a basic workflow that is manually triggered

name: Jakarta EE 11 Core Profile with WildFly

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  push:
    branches:
      - 'main'
    paths:
      - '.github/workflows/core-profile-tck-ee11.yml'
      - 'core-profile/**'
  pull_request:
    branches:
      - 'main'
    paths:
      - '.github/workflows/core-profile-tck-ee11.yml'
      - 'core-profile/**'
  schedule:
    - cron: '0 0 * * *' # Every day at 00:00 UTC
  workflow_dispatch:

# Only run the latest job
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  coreprofile-tck:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java: ['17', '21']

    # Runner steps
    steps:
    - uses: actions/checkout@v4
    - uses: wildfly-extras/wildfly-nightly-download@v1
      id: wildfly-nightly
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
        cache: 'maven'
    - name: Build with Maven Java ${{ matrix.java }} on WildFly ${{ steps.wildfly-nightly.outputs.wildfly-version }}
      run:  |
        cd core-profile
        mvn -B clean verify -Dversion.org.wildfly=${{ steps.wildfly-nightly.outputs.wildfly-version }} -fae
    - name: TCK Report
      run: |
        cd core-profile
        curl -Ls https://sh.jbang.dev | bash -s - app setup
        export PATH="${PATH}:${HOME}/.jbang/bin"
        jbang trust add https://github.com/jamezp/jbang-catalog/
        jbang app install parse-surefire-report@jamezp
        
        printf "=%0.s" {1..50}
        printf "\nOS Information\n"
        printf "=%0.s" {1..50}
        printf "\n"
        cat /etc/os-release
        printf "\n"
        
        printf "=%0.s" {1..50}
        printf "\nJava Version\n"
        printf "=%0.s" {1..50}
        printf "\n"
        java -version
        
        cd cdi-langmodel-tck
        printf "\n\nCDI langmodel TCK\n"
        parse-surefire-report --batch
        
        cd ../cdi-tck
        printf "\n\nCDI TCK\n"
        parse-surefire-report --batch
        
        cd ../core-tck
        printf "\n\nCore TCK\n"
        parse-surefire-report --batch
        
        cd ../inject-tck
        printf "\n\nInject TCK\n"
        parse-surefire-report --batch
        
        cd ../jsonb-standalone-tck
        printf "\n\nJSON Binding Standalone TCK\n"
        parse-surefire-report --batch
        
        cd ../jsonp-plugability-tck
        printf "\n\nJSON Processing Plugability TCK\n"
        parse-surefire-report --batch
        
        cd ../jsonp-standalone-tck
        printf "\n\nJSON Processing Standalone TCK\n"
        parse-surefire-report --batch
        
        cd ../rest-tck
        printf "\n\nREST TCK\n"
        parse-surefire-report --batch
        
        cd ..
        printf "\n\nAll Totals\n"
        parse-surefire-report --batch
    - uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-reports-${{ matrix.java }}
        path: |
          '**/surefire-reports/'
          '**/failsafe-reports/'
        
