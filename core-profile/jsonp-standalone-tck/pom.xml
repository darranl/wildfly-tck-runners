<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright \(c\) "2022" Red Hat and others
  ~
  ~ This program and the accompanying materials are made available under the Apache Software License 2.0 which is available at:
  ~  https://www.apache.org/licenses/LICENSE-2.0.
  ~
  ~  SPDX-License-Identifier: Apache-2.0
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- Just for staging proflie access (-Pstaging) for unreleased Jakarta APIs -->
    <parent>
        <groupId>org.wildfly.tck</groupId>
        <artifactId>core-tck-runner-parent</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>jsonp-standalone-tck-runner</artifactId>
    <name>WildFly Jakarta JSON-P Standalone TCK Runner</name>

    <dependencies>
        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>sigtest-maven-plugin</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.json</groupId>
            <artifactId>jakarta.json-tck-tests</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <exportAntProperties>true</exportAntProperties>
                            <target>
                                <fileset id="json-jar"
                                         dir="${jboss.home}${file.separator}modules/system/layers/base/jakarta/json/api/main/">
                                    <!-- Include the libraries from the server on the test class path and on the signature test class path -->
                                    <include name="**/jakarta.json-api*.jar"/>
                                </fileset>
                                <pathconvert pathsep="${path.separator}"
                                             property="jakarta.json.jar" refid="json-jar"/>
                                <fileset id="server-jars"
                                         dir="${jboss.home}/modules/system/layers/base/">
                                    <!-- The implementations and API's are required on the test class path -->
                                    <include name="**/org/eclipse/parsson/main/parsson*.jar"/>
                                    <include name="**/jakarta/json/api/main/jakarta*.jar"/>
                                </fileset>
                                <pathconvert pathsep="," property="server.jars" refid="server-jars"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <trimStackTrace>false</trimStackTrace>
                    <failIfNoTests>true</failIfNoTests>
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>
                </configuration>
                <executions>
                    <execution>
                        <id>default-test</id>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>json-tck-tests</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <additionalClasspathElements>
                                <!-- Include the libraries from the server on the test class path -->
                                <additionalClasspathElement>${server.jars}</additionalClasspathElement>
                            </additionalClasspathElements>
                            <dependenciesToScan>
                                <dependency>jakarta.json:jakarta.json-tck-tests</dependency>
                            </dependenciesToScan>
                            <systemPropertyVariables>
                                <jimage.dir>${jimage.dir}</jimage.dir>
                                <signature.sigTestClasspath>
                                    ${jakarta.json.jar}:${jimage.dir}/java.base:${jimage.dir}/java.rmi:${jimage.dir}/java.sql:${jimage.dir}/java.naming
                                </signature.sigTestClasspath>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>

